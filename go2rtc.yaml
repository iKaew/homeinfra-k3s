
apiVersion: v1
kind: Namespace
metadata:
  name: go2rtc
  labels:
    name: go2rtc
    
---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-path-retain
provisioner: rancher.io/local-path
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: go2rtc-data-pvc
  namespace: go2rtc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path-retain
  resources:
    requests:
      storage: 2Gi
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: go2rtc
  namespace: go2rtc
  labels:
    app: go2rtc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go2rtc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: go2rtc
    spec:
      volumes:
        - name: go2rtc-data-vol
          persistentVolumeClaim:
            claimName: go2rtc-data-pvc
      containers:
        - name: go2rtc
          image: 'alexxit/go2rtc'
          resources:
          ports:
            - name: api
              containerPort: 1984
              protocol: TCP
            - name: rtsp
              containerPort: 8554
              protocol: TCP
            - name: webrtc
              containerPort: 8555
              protocol: TCP
              containerPort: 8555
              protocol: TCP
          volumeMounts:
            - name: go2rtc-data-vol
              mountPath: /config
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            privileged: true
      restartPolicy: Always
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 192.168.1.3
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600    

---

kind: Service
apiVersion: v1
metadata:
  name: go2rtc
  namespace: go2rtc
  labels:
    app: go2rtc
    kubernetes.io/name: go2rtc
spec:
  ports:
    - name: api
      protocol: TCP
      port: 1984
      targetPort: 1984
    - name: rtsp
      protocol: TCP
      port: 8554
      targetPort: 8554
    - name: webrtc-tcp
      protocol: TCP
      port: 8555
      targetPort: 8555
    - name: webrtc-udp
      protocol: UDP
      port: 8555
      targetPort: 8555
  selector:
    app: go2rtc
  type: LoadBalancer
  sessionAffinity: None
  
