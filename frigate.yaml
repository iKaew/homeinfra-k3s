
apiVersion: v1
kind: Namespace
metadata:
  name: frigate
  labels:
    name: frigate
    
---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-path-retain
provisioner: rancher.io/local-path
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frigate-data-pvc
  namespace: frigate
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path-retain
  resources:
    requests:
      storage: 2Gi
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: frigate
  namespace: frigate
  labels:
    app: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: frigate
    spec:
      volumes:
        - name: frigate-data-vol
          persistentVolumeClaim:
            claimName: frigate-data-pvc
      containers:
        - name: frigate
          image: 'ghcr.io/blakeblackshear/frigate'
          resources:
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: frigate-data-vol
              mountPath: /etc/frigate-data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            privileged: true
      restartPolicy: Always
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 192.168.1.3
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600    

---

kind: Service
apiVersion: v1
metadata:
  name: frigate
  namespace: frigate
  labels:
    app: frigate
    kubernetes.io/name: frigate
spec:
  ports:
    - name: frigate
      protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: frigate
  type: NodePort
  sessionAffinity: None
  
