apiVersion: v1
kind: Namespace
metadata:
  name: n8n

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-data-pvc
  namespace: n8n
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  # Adjust based on your needs

---
apiVersion: v1
kind: Secret
metadata:
  name: n8n-secrets
  namespace: n8n
type: Opaque
data:
  N8N_ENCRYPTION_KEY: "YOUR_ENCRYPTION_KEY_BASE64"  # Replace with `echo -n 'your-key' | base64`

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
  labels:
    app: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
        - name: n8n
          image: n8nio/n8n:stable
          ports:
            - containerPort: 5678
          env:
            - name: N8N_PORT
              value: "5678"
            - name: N8N_PROTOCOL
              value: "http"
            - name: N8N_HOST
              value: "n8n.local"
            - name: N8N_BASIC_AUTH_ACTIVE
              value: "true"
            - name: N8N_BASIC_AUTH_USER
              value: "admin"
            - name: N8N_BASIC_AUTH_PASSWORD
              value: "strongpassword"
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: n8n-secrets
                  key: N8N_ENCRYPTION_KEY
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n  # SQLite database storage
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: n8n-service
  namespace: n8n
spec:
  selector:
    app: n8n
  ports:
    - protocol: TCP
      port: 5678
      targetPort: 5678
  type: LoadBalancer  # Exposes n8n via a LoadBalancer
